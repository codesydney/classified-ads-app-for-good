name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
      - name: Run build
        run: npm run build

  prettier-check:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run prettier
        run: npm run prettier:check

  client-test:
    needs: prettier-check
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run client tests
        run: npm run client:test

  server-test-integration:
    needs: prettier-check
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run server integration tests
        run: npm run server:test:integration
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          TEST_MONGO_URI: ${{ secrets.TEST_MONGO_URI }}
          SENDGRID_EMAIL: ${{ secrets.SENDGRID_EMAIL }}
          CLIENT_URL: ${{ secrets.CLIENT_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

  server-test-unit:
    needs: prettier-check
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run server unit tests
        run: npm run server:test:unit

  csc-deploy:
    needs: [ client-test, server-test-integration, server-test-unit ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to cloud server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.CLOUD_HOST }}
          username: classifieds
          key: ${{ secrets.CLOUD_KEY }}
          port: 22
          script: cd staging && ./deploy

name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      TEST_MONGO_URI: ${{ secrets.TEST_MONGO_URI }}
      SENDGRID_EMAIL: ${{ secrets.SENDGRID_EMAIL }}
      CLIENT_URL: ${{ secrets.CLIENT_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
      - name: Run build
        run: npm run build
      - name: Create .env file in server directory
        run: |
          echo "MONGO_URI=${MONGO_URI}" > server/.env
          echo "TEST_MONGO_URI=${TEST_MONGO_URI}" >> server/.env
          echo "SENDGRID_EMAIL=${SENDGRID_EMAIL}" >> server/.env
          echo "CLIENT_URL=${CLIENT_URL}" >> server/.env
          echo "JWT_SECRET=${JWT_SECRET}" >> server/.env
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> server/.env
          echo "AWS_BUCKET_NAME=${AWS_BUCKET_NAME}" >> server/.env
          echo "AWS_REGION=${AWS_REGION}" >> server/.env
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> server/.env
      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distfiles
          path: |
            client/dist
            server/package.json
            server/.env
            server/dist
          retention-days: 14

  prettier-check:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run prettier
        run: npm run prettier:check

  client-test:
    needs: prettier-check
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run client tests
        run: npm run client:test

  server-test-integration:
    needs: prettier-check
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run server integration tests
        run: npm run server:test:integration
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          TEST_MONGO_URI: ${{ secrets.TEST_MONGO_URI }}
          SENDGRID_EMAIL: ${{ secrets.SENDGRID_EMAIL }}
          CLIENT_URL: ${{ secrets.CLIENT_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

  server-test-unit:
    needs: prettier-check
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run server unit tests
        run: npm run server:test:unit

  csc-deploy:
    runs-on: ubuntu-latest
    needs: [ client-test, server-test-integration, server-test-unit ]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: distfiles
        path: distfiles
    - name: Deploy client and server to prod
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.CLOUD_HOST }}
        username: ustaa
        key: ${{ secrets.CLOUD_KEY }}
        port: 22
        source: distfiles/*
        rm: true
        target: htdocs/www.ustaa.au/
        strip_components: 1
    - name: Start Process manager
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.CLOUD_HOST }}
        username: ustaa
        key: ${{ secrets.CLOUD_KEY }}
        port: 22
        script: cd staging && ./deploy
